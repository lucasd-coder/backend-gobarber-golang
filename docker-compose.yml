version: '3'

services:
  database:
    image: postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=gobarber
      - SCHEMA=gobarber_golang
      - ANON=web_anon
      - AUTHENTICATOR=authenticator
    volumes:            
      - ./.docker/db/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
      - postgres_data:/var/lib/postgresql/data/
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    env_file:
      - .env
  
  redis:
    image: redis:alpine
    ports:
      - 6380:6380
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    env_file:
      - .env
  
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=${DATABASE_MONGODB}
      - MONGO_INITDB_ROOT_USERNAME=${USERNAME_MONGODB}
      - MONGO_INITDB_ROOT_PASSWORD=${PASSWORD_MONGODB}
    ports:
      - 27017:27017
    volumes:
      - ./.docker/mongo-entrypoint:/docker-entrypoint-initdb.d
      - mongodb:/data/db
      - mongoconfig:/data/configdb      
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    env_file:
      - .env
  
  app:    
    container_name: backend-gobarber-golang
    build: .
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
    volumes:
      - .:/go/src
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    env_file:
      - .env

volumes:
  postgres_data:
  mongodb:
  mongoconfig: